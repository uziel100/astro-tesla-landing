---
// import TypographyItems from "../components/Typography/TypographyItems.astro";
import Layout from "../layouts/Layout.astro";
import HeroSection from "../components/sections/HeroSection.astro";
import ProductSection from "../components/sections/ProductSection.astro";
import Header from "../components/header/Header.astro";
---

<Layout title="Tesla clone with tailwind">
  <Header />
  <main
    class="h-screen snap-y snap-mandatory overflow-y-scroll overflow-x-hidden"
    id="main-container"
  >
    <div class="snap-center slider slider1">
      <HeroSection />
    </div>
    <div class="snap-center slider slider2">
      <ProductSection
        title="Model 3"
        linkDriving="#"
        coverUrl="/cardModel3.avif"
      />
    </div>
    <div class="snap-center slider slider3">
      <ProductSection
        title="Model Y"
        linkDriving="#"
        coverUrl="/cardModelY.avif"
      />
    </div>
    <div class="snap-center slider slider4">
      <ProductSection
        title="Model S"
        linkDriving="#"
        coverUrl="/cardModelS.avif"
      />
    </div>
    <div class="snap-center slider slider5">
      <ProductSection
        title="Model X"
        linkDriving="#"
        coverUrl="/cardModelX.avif"
      />
    </div>
  </main>
</Layout>

<script>
  const videoEl = document.querySelector("video");
  const navsEl = document.querySelectorAll("nav");
  const logoEl = document.getElementById("logo");

  const options = {
    root: document.querySelector("#main-container"),
    rootMargin: "10px 0px", // like css property
    threshold: 1.0,
  };
  const callback = (entries: IntersectionObserverEntry[]) =>
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        if (entry.target.classList.contains("slider1")) {
          videoEl.style.display = "block";
          videoEl.style.visibility = "visible";

          logoEl.classList.remove("logoColorBlack");
          logoEl.classList.add("logoColorWhite");

          navsEl.forEach((nav) => {
            nav.classList.remove("text-black");
            nav.classList.add("text-white");
          });
        } else {
          videoEl.style.display = "none";
          videoEl.style.visibility = "hidden";

          logoEl.classList.remove("logoColorWhite");
          logoEl.classList.add("logoColorBlack");

          navsEl.forEach((nav) => {
            nav.classList.toggle("text-black");
            nav.classList.remove("text-white");
          });
        }
      }
    });

  let observer: IntersectionObserver = new IntersectionObserver(
    callback,
    options
  );

  document
    .querySelectorAll(".slider")
    .forEach((slider) => observer.observe(slider));
</script>
